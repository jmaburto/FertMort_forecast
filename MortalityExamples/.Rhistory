install.packages("matrixcalc")
rm(list = ls())
options(device="X11")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(quadprog)
library(rgl)
library(MortalitySmooth)
library(HMDdata)
library(vars)
library(forecast)
library(MASS)
library(matrixcalc)
cou <- "Japan"
sex <- "F"
ages <- 0:105
m <- length(ages)
years1 <- 1960:2016
n1 <- length(years1)
Y1 <- matrix(selectHMDdata(cou, "Deaths", sex, ages, years1), m, n1)
E1 <- matrix(selectHMDdata(cou, "Exposures", sex, ages, years1), m, n1)
MX1 <- Y1/E1
lMX1 <- log(MX1)
mx1 <- c(MX1)
lmx1 <- c(lMX1)
## domains for the estimation
x <- 1:m-1
t1 <- 1:n1-1
## w/o age 0
x0 <- x[-1]
m0 <- m-1
Y1 <- matrix(selectHMDdata(cou, "Deaths", sex, ages, years1), m, n1)
years1 <- 1960:2016
n1 <- length(years1)
Y1 <- matrix(selectHMDdata(cou, "Deaths", sex, ages, years1), m, n1)
rm(list = ls())
options(device="X11")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(quadprog)
library(MortalitySmooth)
library(rgl)
e <- c(32649,32508,32376,32252,32133,32018,31905,31792,31678,31560,31438,31343,31302,31300,31327,31370,31416,31454,31470,31452,31388,31267,31128,31012,30910,30810,30702,30575,30419,30224,29981,29680,29313,28902,28474,28027,27559,27067,26550,26008,25439,24843,24220,23569,22933,22340,21768,21199,20617,20005,19352,18648,17883,17055,16160,15303,14552,13861,13191,12511,11797,11031,10203,9311,8364,7376,6408,5512,4692,3950,3288,2705,2198,1763,1396,1090,839,637,476,351,254,181,127,87,59,39,26)
eta.T <- c(-7.903,-7.716,-7.546,-7.396,-7.263,-7.148,-7.053,-6.978,-6.916,-6.881,-6.855,-6.82,-6.788,-6.75,-6.705,-6.657,-6.608,-6.555,-6.501,-6.449,-6.398,-6.344,-6.287,-6.228,-6.168,-6.105,-6.042,-5.977,-5.91,-5.842,-5.773,-5.702,-5.628,-5.552,-5.473,-5.394,-5.317,-5.24,-5.162,-5.085,-5.008,-4.93,-4.851,-4.77,-4.687,-4.602,-4.514,-4.423,-4.329,-4.235,-4.139,-4.041,-3.942,-3.843,-3.742,-3.638,-3.532,-3.425,-3.317,-3.208,-3.099,-2.991,-2.883,-2.775,-2.667,-2.561,-2.455,-2.349,-2.244,-2.141,-2.039,-1.939,-1.84,-1.744,-1.649,-1.554,-1.462,-1.372,-1.284,-1.201,-1.122,-1.047,-0.975,-0.907,-0.843,-0.782,-0.724)
m <- length(eta.T)
x <- 12:98
mu.T <- exp(eta.T)
y.T <- e*mu.T
y <- rpois(m, y.T)
mx <- y/e
lmx <- log(mx)
e0.obs <- sum(exp(-cumsum(mx)))+0.5
plot(x, lmx)
lines(x, eta.T, col=2)
B <- MortSmooth_bbase(x=x, xl=min(x), xr=max(x),
ndx=floor(m/4), deg=3)
B
nb <- ncol(B)
## penalty stuff
lambda <- 10^1
D <- diff(diag(nb), diff=2)
tDD <- t(D)%*%D
P <- lambda * tDD
eta <- log((y+1)/(e+1))
for(it in 1:20){
mu <- e*exp(eta)
z <- (y-mu)/mu + eta
w <- as.vector(mu)
tBWB <- t(B) %*% (w * B)
tBWBpP <- tBWB + P
tBWz <- t(B) %*% (w * z)
betas <- solve(tBWBpP, tBWz)
old.eta <- eta
eta <- B%*%betas
dif.eta <- max(abs(old.eta - eta))
cat(it, dif.eta, "\n")
if(dif.eta < 1e-4) break
}
eta.S <- eta
mu.S <- exp(eta.S)
betas.S <- betas
plot(x, lmx)
lines(x, eta.T, col=2)
lines(x, eta.S, col=3, lwd=2, lty=2)
## estimated e0
e0.S <- sum(exp(-cumsum(mu.S)))+0.5
## target e0
e0.tar <- 65
hxFUN <-  function(betas){
eta.F <- B%*%betas
mu.F <- exp(eta.F)
e0.F <- sum(exp(-cumsum(mu.F)))+0.5
hx <- e0.F - e0.tar
return(hx)
}
hx1FUN <- function(betas){
eta.F <- B%*%betas
mu.F <- exp(eta.F)
sum.exp.mu <- -exp(sum(-mu.F))
hx1 <- matrix(0, nb, 1)
for(i in 1:nb){
Bi <- B[,i]
p1 <- Bi[1]*exp(mu.F[2] + eta.F[1]) + Bi[1]*mu.F[1] + Bi[2]*mu.F[2]
for(j in 3:m){
p1 <- p1*exp(mu.F[j]) + sum(Bi[1:j]*mu.F[1:j])
}
hx1[i,1] <- p1*sum.exp.mu
}
return(hx1)
}
betas <- betas.S
for(it in 1:50){
eta <- B%*%betas
mu <- e*exp(eta)
z <- (y-mu)/mu + eta
w <- as.vector(mu)
tBWB <- t(B) %*% (w * B)
tBWBpP <- tBWB + P
tBWz <- t(B) %*% (w * z)
fx1 <- tBWBpP%*%betas - c(tBWz)
fx2 <- tBWBpP
hx <- hxFUN(betas)
hx1 <- hx1FUN(betas)
Am <- hx1
bv <- -c(hx)
LHS <- rbind(cbind(fx2, Am),
cbind(t(Am), 0*diag(ncol(Am))))
RHS <- c(-fx1, bv)
d <- solve(LHS, RHS)[1:nb]
betas <- betas + d
cat(it, max(abs(d)), "\n")
if(max(abs(d))<1e-4) break
}
eta.C <- eta
mu.C <- exp(eta.C)
betas.C <- betas
## constrained e0
e0.C <- sum(exp(-cumsum(mu.C)))+0.5
cbind(e0.tar, e0.C, e0.S)
## plotting
plot(x, lmx)
lines(x, eta.T, col=2)
lines(x, eta.S, col=3, lwd=2, lty=2)
lines(x, eta.C, col=4, lwd=3)
rm(list = ls())
options(device="X11")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(quadprog)
library(rgl)
library(MortalitySmooth)
library(HMDdata)
library(vars)
library(forecast)
cou <- "Italy"
sex <- "F"
ages <- 0:105
m <- length(ages)
years1 <- 1960:2014
n1 <- length(years1)
Y1 <- matrix(selectHMDdata(cou, "Deaths", sex, ages, years1), m, n1)
E1 <- matrix(selectHMDdata(cou, "Exposures", sex, ages, years1), m, n1)
MX1 <- Y1/E1
lMX1 <- log(MX1)
mx1 <- c(MX1)
lmx1 <- c(lMX1)
## domains for the estimation
x <- 1:m-1
t1 <- 1:n1-1
rm(list = ls())
options(device="X11")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(quadprog)
library(rgl)
library(MortalitySmooth)
library(HMDdata)
library(vars)
library(forecast)
cou <- "Italy"
sex <- "F"
ages <- 0:105
m <- length(ages)
years1 <- 1960:2014
n1 <- length(years1)
Y1 <- matrix(selectHMDdata(cou, "Deaths", sex, ages, years1), m, n1)
selectHMDdata
HMDdata
install.packages(c("bookdown", "checkmate", "cluster", "dbplyr", "digest", "dplyr", "DT", "e1071", "etm", "evaluate", "forecast", "fs", "ggthemes", "glmnet", "gss", "hexbin", "knitr", "ks", "lmtest", "lpSolve", "markdown", "multcomp", "nlme", "numDeriv", "openssl", "pillar", "processx", "progress", "quadprog", "quantreg", "rcmdcheck", "RcppArmadillo", "reprex", "RJSONIO", "rmarkdown", "rvest", "sn", "snakecase", "svglite", "tibble", "tinytex", "tsDyn", "tseries", "visNetwork", "xfun", "XML", "zoo"))
