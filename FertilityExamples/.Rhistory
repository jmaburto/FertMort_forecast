## constraints on TFR over "future" years
Constr.TFR <-  function(BETASF){
ETA.F <- MortSmooth_BcoefB(Bx, BtF, BETASF)
MU.F <- exp(ETA.F)
TFR.F <- colSums(MU.F)
delta.TFR <- TFR.F - TFR.tar
deriv.TFR <- matrix(0, nbF, nF)
for(i in 1:nF){
Ba <- ETA.F[,i]
exp.Ba <- exp(Ba)
wr <- 1:nbx + (i-1)*nbx
deriv.TFR[wr,i] <- t(ones.m)%*% diag(MU.F[,i]) %*% Bx
}
out.TFR <- list(delta.TFR=delta.TFR,
deriv.TFR=deriv.TFR)
return(out.TFR)
}
## constraints on MAB over "future" years
Constr.MAB <-  function(BETASF){
ETA.F <- MortSmooth_BcoefB(Bx, BtF, BETASF)
MU.F <- exp(ETA.F)
x05 <- x+0.5
MAB.F <- apply(MU.F, 2, function(mx)sum(mx*x05)/sum(mx))
delta.MAB <- MAB.F - MAB.tar
deriv.MAB <- matrix(0, nbF, nF)
for(i in 1:nF){
Ba <- ETA.F[,i]
exp.Ba <- exp(Ba)
d.exp.Ba <- diag(exp.Ba)
dQx <- t(d.exp.Ba %*% x05) %*% Bx
d1Q <- t(ones.m) %*% d.exp.Ba %*% Bx
num1 <- dQx * c(t(ones.m) %*% exp.Ba)
num2 <- c(t(exp.Ba)%*%x05) * d1Q
den <- c((t(ones.m) %*% exp.Ba))^2
deriv.i <- (num1 - num2)/den
wr <- 1:nbx + (i-1)*nbx
deriv.MAB[wr,i] <- deriv.i
}
out.MAB <- list(delta.MAB=delta.MAB,
deriv.MAB=deriv.MAB)
return(out.MAB)
}
## constraints on VAB over "future" years
Constr.VAB <-  function(BETASF){
ETA.F <- MortSmooth_BcoefB(Bx, BtF, BETASF)
MU.F <- exp(ETA.F)
x05 <- x+0.5
TFR.F <- colSums(MU.F)
MAB.F <- apply(MU.F, 2, function(mx)sum(mx*x05)/sum(mx))
VAB.F <- numeric(nF)
for(i in 1:nF){
VAB.F[i] <- sum(((x05 - MAB.F[i])^2)*MU.F[,i])/TFR.F[i]
}
delta.VAB <- VAB.F - VAB.tar
deriv.VAB <- matrix(0, nbF, nF)
for(i in 1:nF){
Ba <- ETA.F[,i]
exp.Ba <- exp(Ba)
d.exp.Ba <- diag(exp.Ba)
dQx2 <- t(d.exp.Ba %*% (x05^2)) %*% Bx
dQx <- t(d.exp.Ba %*% x05) %*% Bx
d1Q <- t(ones.m) %*% d.exp.Ba %*% Bx
## part1
p1.num1 <- dQx2 * c(t(ones.m) %*% exp.Ba)
p1.num2 <- c(t(exp.Ba)%*% (x05)^2) * d1Q
p1.den <- c((t(ones.m) %*% exp.Ba))^2
p1 <- (p1.num1 - p1.num2)/p1.den
## part2
p2.num1 <- dQx * c(t(ones.m) %*% exp.Ba)
p2.num2 <- c(t(exp.Ba)%*%x05) * d1Q
p2.den <- c((t(ones.m) %*% exp.Ba))^2
p2a <- (p2.num1 - p2.num2)/p2.den
p2b <- 2 * (t(exp.Ba)%*%x05 / t(ones.m) %*% exp.Ba )
wr <- 1:nbx + (i-1)*nbx
deriv.i <- (p1.num1 - p1.num2)/p1.den - c(p2b)*p2a
deriv.VAB[wr,i] <- deriv.i
}
out.VAB <- list(delta.VAB=delta.VAB,
deriv.VAB=deriv.VAB)
return(out.VAB)
}
BETAS <- BETAS.S
PLOT=TRUE
for(it in 1:50){
betas <- c(BETAS)
ETA <- MortSmooth_BcoefB(Bx, Bt, BETAS)
MU <- E*exp(ETA)
W <- c(WEI*MU)
z <- ETA + (1/MU) * (Y - MU)
z[which(WEI == 0)] <- 0
WW <- WEI * W
tBWB <- MortSmooth_BWB(RTBx, RTBt, nbx, nbt, WW)
tBWBpP <- tBWB + PF
tBWz <- MortSmooth_BcoefB(t(Bx), t(Bt), (WW * z))
fx1 <- tBWBpP%*%betas - c(tBWz)
fx2 <- tBWBpP
BETASF <- BETAS[,(nbt1+1):nbt]
constr.TFR <- Constr.TFR(BETASF)
hx <- constr.TFR$delta.TFR
hx1 <- constr.TFR$deriv.TFR
constr.MAB <- Constr.MAB(BETASF)
gx <- constr.MAB$delta.MAB
gx1 <- constr.MAB$deriv.MAB
constr.VAB <- Constr.VAB(BETASF)
ux <- constr.VAB$delta.VAB
ux1 <- constr.VAB$deriv.VAB
Am <- cbind(rbind(ONE, hx1),
rbind(ONE, gx1),
rbind(ONE, ux1))
bv <- -c(hx, gx, ux)
LHS <- rbind(cbind(fx2, Am),
cbind(t(Am), 0*diag(ncol(Am))))
RHS <- c(-fx1, bv)
d <- solve(LHS, RHS)[1:nb]
D <- matrix(d, nbx, nbt)
BETAS <- BETAS + D
cat(it, max(abs(d)), "\n")
if(max(abs(d))<1e-4) break
if(PLOT){
par(mfrow=c(1,3))
TFR.C <- colSums(exp(ETA))
ranx <- range(t)
rany <- range(TFR1, TFR.tar, TFR.S)
plot(t1, TFR1, xlim=ranx, ylim=rany)
points(tF, TFR.tar, pch=16, t="b", lwd=2)
lines(t, TFR.S, col=2, lwd=2, lty=2)
lines(t, TFR.C, col=4, lwd=3)
abline(v=t[n1]+0.5)
x05 <- x+0.5
MAB.C <- apply(exp(ETA), 2, function(mx)sum(mx*x05)/sum(mx))
ranx <- range(t)
rany <- range(MAB1, MAB.tar, MAB.S)
plot(t1, MAB1, xlim=ranx, ylim=rany)
points(tF, MAB.tar, pch=16, t="b", lwd=2)
lines(t, MAB.S, col=2, lwd=2, lty=2)
lines(t, MAB.C, col=4, lwd=3)
abline(v=t[n1]+0.5)
VAB.C <- numeric(n)
for(i in 1:n){
VAB.C[i] <- sum(((x05 - MAB.C[i])^2)*exp(ETA[,i])/TFR.C[i])
}
ranx <- range(t)
rany <- range(VAB1, VAB.tar, VAB.S)
plot(t1, VAB1, xlim=ranx, ylim=rany)
points(tF, VAB.tar, pch=16, t="b", lwd=2)
lines(t, VAB.S, col=2, lwd=2, lty=2)
lines(t, VAB.C, col=4, lwd=3)
abline(v=t[n1]+0.5)
par(mfrow=c(1,1))
}
}
BETAS.C <- BETAS
ETA.C <- ETA
MU.C <- exp(ETA)
## compute estimated TFR, MAB and VAB
TFR.C <- colSums(MU.C)
MAB.C <- apply(MU.C, 2, function(mx) sum(mx*(x+0.5)) / sum(mx))
VAB.C <- numeric(n)
for(i in 1:n){
mx.i <- MU.C[,i]
mab.i <- MAB.C[i]
VAB.C[i] <- sum((((x+0.5) - mab.i)^2)*mx.i)/sum(mx.i)
}
## estimated TFR, MAB and VAB
ranx <- range(t)
par(mfrow=c(1,3))
rany <- range(TFR1, TFR.tar, TFR.S, TFR.C)
plot(t1, TFR1, xlim=ranx, ylim=rany, pch=16, col=1)
lines(t, TFR.C, col=4, lwd=4)
lines(tF, TFR.tar, col=3, lwd=2, lty=3)
lines(t, TFR.S, col=2, lwd=2, lty=2)
points(t1, TFR1, pch=16, col=1)
abline(v=t[n1]+0.5)
legend("top", c("Actual",
"Smooth+Forecast",
"Target Future TFR",
"Smooth+Forecast+Constrained"),
col=c(1,2,3,4), pch=c(16,NA,NA,NA),
lty=c(NA, 2, 3, 1), lwd=c(1,2,2,4))
rany <- range(MAB1, MAB.tar, MAB.S, MAB.C)
plot(t1, MAB1, xlim=ranx, ylim=rany, pch=16, col=1)
lines(t, MAB.C, col=4, lwd=4)
lines(tF, MAB.tar, col=3, lwd=2, lty=3)
lines(t, MAB.S, col=2, lwd=2, lty=2)
points(t1, MAB1, pch=16, col=1)
abline(v=t[n1]+0.5)
legend("top", c("Actual",
"Smooth+Forecast",
"Target Future MAB",
"Smooth+Forecast+Constrained"),
col=c(1,2,3,4), pch=c(16,NA,NA,NA),
lty=c(NA, 2, 3, 1), lwd=c(1,2,2,4))
rany <- range(VAB1, VAB.tar, VAB.S, VAB.C)
plot(t1, VAB1, xlim=ranx, ylim=rany, pch=16, col=1)
lines(t, VAB.C, col=4, lwd=4)
lines(tF, VAB.tar, col=3, lwd=2, lty=3)
lines(t, VAB.S, col=2, lwd=2, lty=2)
points(t1, VAB1, pch=16, col=1)
abline(v=t[n1]+0.5)
legend("top", c("Actual",
"Smooth+Forecast",
"Target Future VAB",
"Smooth+Forecast+Constrained"),
col=c(1,2,3,4), pch=c(16,NA,NA,NA),
lty=c(NA, 2, 3, 1), lwd=c(1,2,2,4))
par(mfrow=c(1,1))
## compute estimated TFR, MAB and VAB
TFR.C <- colSums(MU.C)
MAB.C <- apply(MU.C, 2, function(mx) sum(mx*(x+0.5)) / sum(mx))
VAB.C <- numeric(n)
for(i in 1:n){
mx.i <- MU.C[,i]
mab.i <- MAB.C[i]
VAB.C[i] <- sum((((x+0.5) - mab.i)^2)*mx.i)/sum(mx.i)
}
## estimated TFR, MAB and VAB
ranx <- range(t)
par(mfrow=c(1,3))
rany <- range(TFR1, TFR.tar, TFR.S, TFR.C)
plot(t1, TFR1, xlim=ranx, ylim=rany, pch=16, col=1)
lines(t, TFR.C, col=4, lwd=4)
lines(tF, TFR.tar, col=3, lwd=2, lty=3)
lines(t, TFR.S, col=2, lwd=2, lty=2)
points(t1, TFR1, pch=16, col=1)
abline(v=t[n1]+0.5)
legend("top", c("Actual",
"Smooth+Forecast",
"Target Future TFR",
"Smooth+Forecast+Constrained"),
col=c(1,2,3,4), pch=c(16,NA,NA,NA),
lty=c(NA, 2, 3, 1), lwd=c(1,2,2,4))
rany <- range(MAB1, MAB.tar, MAB.S, MAB.C)
plot(t1, MAB1, xlim=ranx, ylim=rany, pch=16, col=1)
lines(t, MAB.C, col=4, lwd=4)
lines(tF, MAB.tar, col=3, lwd=2, lty=3)
lines(t, MAB.S, col=2, lwd=2, lty=2)
points(t1, MAB1, pch=16, col=1)
abline(v=t[n1]+0.5)
legend("top", c("Actual",
"Smooth+Forecast",
"Target Future MAB",
"Smooth+Forecast+Constrained"),
col=c(1,2,3,4), pch=c(16,NA,NA,NA),
lty=c(NA, 2, 3, 1), lwd=c(1,2,2,4))
rany <- range(VAB1, VAB.tar, VAB.S, VAB.C)
plot(t1, VAB1, xlim=ranx, ylim=rany, pch=16, col=1)
lines(t, VAB.C, col=4, lwd=4)
lines(tF, VAB.tar, col=3, lwd=2, lty=3)
lines(t, VAB.S, col=2, lwd=2, lty=2)
points(t1, VAB1, pch=16, col=1)
abline(v=t[n1]+0.5)
legend("top", c("Actual",
"Smooth+Forecast",
"Target Future VAB",
"Smooth+Forecast+Constrained"),
col=c(1,2,3,4), pch=c(16,NA,NA,NA),
lty=c(NA, 2, 3, 1), lwd=c(1,2,2,4))
par(mfrow=c(1,1))
# ranx <- range(t)
# for(i in 1:m){
#   rany <- range(MX[i,], MU.S[i,], MU.C[i,], na.rm = TRUE)
#   plot(t, MX[i,], xlim=ranx, ylim=rany)
#   lines(t, MU.S[i,], col=2, lwd=2, lty=2)
#   lines(t, MU.C[i,], col=4, lwd=3)
#   title(main=x[i])
#   locator(1)
#   Sys.sleep(0.1)
# }
# for(i in 1:n){
#   rany <- range(MX[,i], MU.S[,i], MU.C[,i], na.rm=TRUE)
#   plot(x, MX[,i], ylim=rany)
#   lines(x, MU.S[,i], col=2, lwd=2, lty=2)
#   lines(x, MU.C[,i], col=4, lwd=3)
#   title(main=t[i])
#   # locator(1)
#   Sys.sleep(0.1)
# }
matplot(x, MU.C, t="l", lty=1, col=colon)
## plotting smooth estimates
whi <- floor(seq(1,n,length=9))
rany <- range(MX1, MU.S, MU.C, 0)
par(mfrow=c(3,3))
for(i in 1:9){
plot(1,1,t="n", xlim=range(x), ylim=rany,
main=paste(t[whi[i]],
round(TFR.C[whi[i]],2),
round(MAB.C[whi[i]],2),
round(VAB.C[whi[i]],2)),
xlab="age", ylab="asfr")
points(x, MX[,whi[i]], pch=16, ylim=rany)
lines(x, MU.S[,whi[i]], col=2, lwd=2, lty=2)
lines(x, MU.C[,whi[i]], col=4, lwd=3)
}
par(mfrow=c(1,1))
whi <- floor(seq(1,m,length=9))
ranx <- range(t)
par(mfrow=c(3,3))
for(i in 1:9){
rany <- range(MX1[whi[i],],
MU.S[whi[i],],
MU.C[whi[i],])
plot(1,1,t="n", xlim=ranx, ylim=rany,
main=paste(x[whi[i]]),
xlab="year", ylab="asfr")
points(t, MX[whi[i],], pch=16)
lines(t, MU.S[whi[i],], col=2, lwd=2, lty=2)
lines(t, MU.C[whi[i],], col=4, lwd=3)
}
par(mfrow=c(1,1))
whi <- floor(seq(1,m,length=9))
ranx <- range(t)
par(mfrow=c(3,3))
for(i in 1:9){
rany <- range(lMX1[whi[i],],
ETA.S[whi[i],],
ETA.C[whi[i],], finite=TRUE,
na.rm = TRUE)
plot(1,1,t="n", xlim=ranx, ylim=rany,
main=paste(x[whi[i]]),
xlab="year", ylab="log-asfr")
points(t1, lMX1[whi[i],], pch=16)
lines(t, ETA.S[whi[i],], col=2, lwd=2, lty=2)
lines(t, ETA.C[whi[i],], col=4, lwd=3)
}
par(mfrow=c(1,1))
plot3d(xx1, tt1, mx1, type="p", col="red",
xlab="age", ylab="year", zlab="asfr", site=5, lwd=15)
surface3d(x, t, MU.S,
back='line', front='line', col=2, lwd=1, alpha = 0.5)
surface3d(x, t, MU.C,
back='line', front='line', col=4, lwd=2, alpha = 0.5)
rm(list = ls())
options(device="X11")
library(quadprog)
library(magic)
Hadwiger <- function(a, b, c, x){
## function for computing asfr from
## Hadwiger (1940) model
p1 <- a*b/c * (c/x)^(3/2)
p2 <- -b^2 * (c/x + x/c -2)
asfr <- p1*exp(p2)
return(asfr)
}
xx <- 12:55
m <- length(xx)
# a, b and c are associated with total fertility, height of
# the curve and Mean Age at Childbearing.
## true parameters
a1T <- 1.75
b1T <- 3
c1T <- 28
a2T <- 1.7
b2T <- 3.1
c2T <- 29
mu1T <- Hadwiger(a1T, b1T, c1T, x=xx)
eta1T <- log(mu1T)
mu2T <- Hadwiger(a2T, b2T, c2T, x=xx)
eta2T <- log(mu2T)
e <- c(421660,415695,420043,415994,418983,413376,414893,414386,
416835,413434,416274,415330,421366,429169,432178,427665,
419672,361242,309296,308672,294653,274481,252437,290595,
294925,298035,302802,305092,314129,318449,324701,332193,
338598,329218,327132,328347,326924,327279,327114,321125,
322818,329727,337702,285953)
e1 <- e/20
e2 <- e/19
y1T <- e1*mu1T
y1 <- rpois(m, y1T)
mx1 <- y1/e1
lmx1 <- log(mx1)
y2T <- e2*mu2T
y2 <- rpois(m, y2T)
mx2 <- y2/e2
lmx2 <- log(mx2)
plot(xx, mx1, t="p", col=1,
ylim=range(0,mx1), main="asfr")
lines(xx, mu1T, col=1, lwd=2)
points(xx, mx2, t="p", col=2)
lines(xx, mu2T, col=2, lwd=2)
## observed TFR
TFR1obs <- sum(mx1)
TFR2obs <- sum(mx2)
## target TFR
TFR1tar <- 3.9
TFR2tar <- 4
## B-splines
B1 <- MortSmooth_bbase(x=xx,xl=min(xx),xr=max(xx),ndx=floor(m/4),deg=3)
B2 <- B1
B <- adiag(B1, B2)
nb <- ncol(B)
## penalty stuff
D <- diff(diag(nb/2), diff=3)
tDD <- t(D)%*%D
lambda <- 10^2
P <- adiag(lambda*tDD, lambda*tDD)
## combining two years
y <- c(y1, y2)
e <- c(e1, e2)
eta <- log((y+1)/(e+1))
betas <- solve(t(B)%*%B, t(B)%*%eta)
for(it in 1:200){
eta <- B%*%betas
mu <- e*exp(eta)
z <- (y - mu)/mu + eta
w <- c(mu)
tBWB <- t(B) %*% (w * B)
tBWBpP <- tBWB + P
tBWz <- t(B) %*% (w * z)
fx1 <- tBWBpP%*%betas - tBWz
fx2 <- tBWBpP
d <- solve(fx2, -fx1)
betas <- betas + d
if(max(abs(d))<1e-4) break
cat(it, max(abs(d)), "\n")
}
## only smooth
betasS <- betas
etaS <- eta
muS <- mu
mx1S <- mu[1:m]/e1
mx2S <- mu[1:m+m]/e2
TFR1smo <- sum(mx1S)
TFR2smo <- sum(mx2S)
data.frame("years1"=c("smo"=TFR1smo, "obs"=TFR1obs, "tar"=TFR1tar),
"years2"=c("smo"=TFR2smo, "obs"=TFR2obs, "tar"=TFR2tar))
hxFUN.1 <-  function(betas){
betas.1 <- betas[1:(nb/2)]
eta.1 <- B1%*%betas.1
exp.eta.1 <- exp(eta.1)
sum.exp.eta.1 <- sum(exp.eta.1)
hx.1 <- sum.exp.eta.1 - TFR1tar # !!!
return(hx.1)
}
hxFUN.2 <-  function(betas){
betas.2 <- betas[1:(nb/2)+(nb/2)]
eta.2 <- B2%*%betas.2
exp.eta.2 <- exp(eta.2)
sum.exp.eta.2 <- sum(exp.eta.2)
hx.2 <- sum.exp.eta.2 - TFR2tar # !!!
return(hx.2)
}
hxFUN.1(betas);TFR1smo-TFR1tar
hxFUN.2(betas);TFR2smo-TFR2tar
hx1FUN.1 <- function(betas){
betas.1 <- betas[1:(nb/2)]
exp.eta.1 <- exp(B1%*%betas.1)
hx1.1 <- sum(B1[,1]*exp.eta.1)
for(i in 2:(nb/2)){
hx1.1 <- rbind(hx1.1, sum(B1[,i]*exp.eta.1))
}
return(hx1.1)
}
hx1FUN.1(betas)
hx1FUN.2 <- function(betas){
betas.2 <- betas[1:(nb/2)+(nb/2)]
exp.eta.2 <- exp(B2%*%betas.2)
hx1.2 <- sum(B2[,1]*exp.eta.2)
for(i in 2:(nb/2)){
hx1.2 <- rbind(hx1.2, sum(B2[,i]*exp.eta.2))
}
return(hx1.2)
}
hx1FUN.2(betas)
betas <- betasS
for(it in 1:20){
eta <- B%*%betas
mu <- e*exp(eta)
z <- (y - mu)/mu + eta
w <- c(mu)
tBWB <- t(B) %*% (w * B)
tBWBpP <- tBWB + P
tBWz <- t(B) %*% (w * z)
fx1 <- tBWBpP%*%betas - tBWz
fx2 <- tBWBpP
hx.1 <- hxFUN.1(betas)
hx1.1 <- hx1FUN.1(betas)
Am.1 <- hx1.1
bv.1 <- -hx.1
hx.2 <- hxFUN.2(betas)
hx1.2 <- hx1FUN.2(betas)
Am.2 <- hx1.2
bv.2 <- -hx.2
Am <- adiag(Am.1, Am.2)
bv <- c(bv.1, bv.2)
LHS <- rbind(cbind(fx2, Am),
cbind(t(Am), diag()))
RHS <- rbind(-fx1, bv)
d <- solve(LHS, RHS)[1:nb]
betas <- betas + d
cat(it, max(abs(d)), "\n")
if(max(abs(d))<1e-6) break
}
hxFUN(betas);hxFUN(betasS)
TFRsmo <- sum(exp(etaS))
TFRcon <- sum(exp(eta))
cbind(TFRobs, TFRsmo, TFRcon)
par(mfrow=c(2,2))
plot(xx, y, t="h", lwd=2, ylim=c(0, max(y)), main="counts")
lines(xx, yT, col=2, lwd=2)
lines(xx, e*exp(etaS), col=3, lwd=2, lty=2)
lines(xx, e*exp(eta), col=4, lwd=2, lty=1)
plot(xx, y/e, t="h", lwd=2,
ylim=range(0, y/e, exp(etaS), exp(eta)), main="rates")
lines(xx, yT/e, col=2, lwd=2)
lines(xx, exp(etaS), col=3, lwd=2, lty=2)
lines(xx, exp(eta), col=4, lwd=2, lty=1)
plot(xx, log(y/e), main="log-rates")
lines(xx, etaT, col=2, lwd=2)
lines(xx, etaS, col=3, lwd=2, lty=2)
lines(xx, eta, col=4, lwd=2, lty=1)
plot(xx, eta-etaS, main="smooth - constraints")
par(mfrow=c(1,1))
